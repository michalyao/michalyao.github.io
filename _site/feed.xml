<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Yao</title>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>推荐几个 Github 上好玩的 Java Repo</title>
        <description>&lt;p&gt;正文之前打波小广告，&lt;a href=&quot;http://monkey.yoryor.me&quot;&gt;Evermonkey&lt;/a&gt; 是我前几天刚刚完成的一个小项目，类似马克飞象的一款 VS Code 扩展，能够在 VS Code 中使用 Markdown 新建，编辑，打开和更新印象笔记。&lt;/p&gt;

&lt;h2 id=&quot;基础&quot;&gt;基础&lt;/h2&gt;

&lt;h3 id=&quot;guava&quot;&gt;guava&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/guava&quot;&gt;google/guava&lt;/a&gt; – Google Core Libraries for Java.&lt;/p&gt;

&lt;p&gt;虽然 JDK1.8 已经补充了很多 Guava 之前提供的特性，但是 Guava 提供的集合，缓存等等工具依然是你效率开发的必备神器。很优秀的源码，建议新手多读读。&lt;/p&gt;

&lt;h3 id=&quot;java-design-patterns&quot;&gt;java-design-patterns&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/iluwatar/java-design-patterns&quot;&gt;iluwatar/java-design-patterns&lt;/a&gt; – Design patterns implemented in Java.&lt;/p&gt;

&lt;p&gt;学习设计模式的不二选择，不止四人帮，还为你提供了很多现代软件开发的解决方案，架构，模型等等。不管是新手还是老鸟都适合花时间读一读。&lt;/p&gt;

&lt;h2 id=&quot;框架&quot;&gt;框架&lt;/h2&gt;

&lt;h3 id=&quot;spring&quot;&gt;spring&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/spring-projects&quot;&gt;spring-project&lt;/a&gt; – Spring CNY Grazing Bucket.&lt;/p&gt;

&lt;p&gt;不多说了，不管你喜不喜欢 Spring，它为你赚得钱你总归不会拒绝。当然不是黑 Spring，相比以前已经进步不少了，但是前提是你的公司要在用 Spring-boot…&lt;/p&gt;

&lt;h3 id=&quot;vertx&quot;&gt;vertx&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/vert.x&quot;&gt;eclipse/vert.x&lt;/a&gt; – Vert.x is a tool-kit for building reactive applications on the JVM.&lt;/p&gt;

&lt;p&gt;厌倦了SSM？ 厌倦了分布式Dubbo? 想做个新世纪的 Java 程序员？想感受一下异步应用的性能？那我推荐你好好看看这个库。微服务，响应式应用， DevOps…除却这些火爆的新概念，Vertx 最重要的是能让你重新感受到编程的乐趣。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServer&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractVerticle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;vertx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createHttpServer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;requestHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello Vert.x!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;dropwizard&quot;&gt;dropwizard&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dropwizard/dropwizard&quot;&gt;dropwizard/dropwizard&lt;/a&gt; – A damn simple library for building production-ready RESTful web services.&lt;/p&gt;

&lt;p&gt;描述的很清楚了，为 RESTful 而生，到底有多便捷，那要你学习使用之后才知晓。&lt;/p&gt;

&lt;h2 id=&quot;语言&quot;&gt;语言&lt;/h2&gt;

&lt;h3 id=&quot;scala&quot;&gt;Scala&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/scala/scala&quot;&gt;scala/scala&lt;/a&gt; – The Scala programming language.&lt;/p&gt;

&lt;p&gt;基于 JVM 的编程语言太多太多了，Scala 这门语言如果你学习一下，我相信你会爱上它的。面向对象，函数式编程，能够满足你当初对编程的所有幻想。尤其在大数据，机器学习如火如荼的时代，对你的qian途很有帮助。平时没有太多机会接触 Scala，但是 Akka，Play 这些词你总该听过。当初用过 &lt;a href=&quot;https://github.com/gatling/gatling&quot;&gt;gatling&lt;/a&gt; 给公司做过集群应用的负载测试。&lt;/p&gt;

&lt;h3 id=&quot;kotlin&quot;&gt;kotlin&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/JetBrains/kotlin&quot;&gt;JetBrains/kotlin&lt;/a&gt; – The Kotlin Programming Language&lt;/p&gt;

&lt;p&gt;说实话，没太接触过 kotlin, 不过 JetBrains 这家公司你可能不会陌生。为了我最爱的 IDE，友情推荐一发，毕竟这么有逼格的公司开发的语言也不会太差。&lt;/p&gt;

&lt;h2 id=&quot;数据库&quot;&gt;数据库&lt;/h2&gt;

&lt;h3 id=&quot;elasticsearch&quot;&gt;elasticsearch&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/elastic/elasticsearch&quot;&gt;elastic/elasticsearch&lt;/a&gt; – Open Source, Distributed, RESTful Search Engine.&lt;/p&gt;

&lt;p&gt;许多年前，一个叫Shay Banon的待业工程师跟随他的新婚妻子来到伦敦，他的妻子想在伦敦学习做一名厨师。而他在伦敦寻找工作的期间，接触到了Lucene的早期版本，他想为自己的妻子开发一个方便搜索菜谱的应。爱情的结晶，文本搜索必备神器。&lt;/p&gt;

&lt;h3 id=&quot;opentsdb&quot;&gt;opentsdb&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/OpenTSDB/opentsdb&quot;&gt;OpenTSDB/opentsdb&lt;/a&gt; – A scalable, distributed Time Series Database.&lt;/p&gt;

&lt;p&gt;时序型数据库鼻祖，官方文档很详细，如果有运维监控方面的业务需求可以学习学习。有一个基于 opentsdb 重写的库 &lt;a href=&quot;https://github.com/kairosdb/kairosdb&quot;&gt;kairosbd&lt;/a&gt;，代码设计的很好，不过文档不是很详细，不推荐不熟悉时序型数据库的同学作为入门库。&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;

&lt;h3 id=&quot;netty&quot;&gt;Netty&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/netty/netty&quot;&gt;netty/netty&lt;/a&gt; – Netty project - an event-driven asynchronous network application framework&lt;/p&gt;

&lt;p&gt;高性能、异步事件驱动的NIO框架，它提供了对TCP、UDP和文件传输的支持，作为一个异步NIO框架，Netty的所有IO操作都是异步非阻塞的。 前面提到的 Vert.x 底层就是用 Netty 实现的。也许你觉得这东西太底层，但是时间久了你就会明白，精华都在底层。&lt;/p&gt;

&lt;h3 id=&quot;rxjava&quot;&gt;RxJava&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot;&gt;ReactiveX/RxJava&lt;/a&gt; – Reactive Extensions for the JVM.&lt;/p&gt;

&lt;p&gt;同样是异步事件驱动模型，相信做 Android 的同学一定不会陌生。。。&lt;/p&gt;

&lt;p&gt;喜欢的朋友们就到 github 上面给个 star 吧。&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017-04-12/java-github-repo/</link>
        <guid isPermaLink="true">http://localhost:4000/2017-04-12/java-github-repo/</guid>
      </item>
    
  </channel>
</rss>
